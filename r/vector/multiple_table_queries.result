SET @@GLOBAL.TIDB_ENABLE_VECTOR_TYPE = 1;

-- Create table t1
DROP TABLE IF EXISTS t1;
CREATE TABLE t1 (id INT, embedding VECTOR);
ALTER TABLE t1 SET TIFLASH REPLICA 1;
INSERT INTO t1  VALUES (1, '[1,2,3]'), (2, '[4,5,6]');

-- Create table t2
DROP TABLE IF EXISTS t2;
CREATE TABLE t2 (id INT, embedding VECTOR);
ALTER TABLE t2 SET TIFLASH REPLICA 1;
INSERT INTO t2 VALUES (3, '[4,5,6]'), (4, '[7,8,9]');

-- Analyze table
ANALYZE TABLE t1, t2;

-- Add TiFlash Replica
SELECT SLEEP(60);
SLEEP(60)
0
SELECT AVAILABLE, PROGRESS FROM INFORMATION_SCHEMA.TIFLASH_REPLICA WHERE TABLE_SCHEMA = DATABASE() AND TABLE_NAME IN ('t1', 't2') ORDER BY TABLE_NAME;
AVAILABLE	PROGRESS
1	1
1	1

-- Test feature: SubQuery

-- Test SubQuery type: using sub-query as scalar
SELECT /*+ READ_FROM_STORAGE(TIKV[t1]) */ t1.embedding, (SELECT /*+ READ_FROM_STORAGE(TIKV[t2]) */ MAX(t2.embedding) FROM t2) AS max_in_t2 FROM t1;
embedding	max_in_t2
[1,2,3]	[7,8,9]
[4,5,6]	[7,8,9]
SELECT /*+ READ_FROM_STORAGE(TIFLASH[t1]) */ t1.embedding, (SELECT /*+ READ_FROM_STORAGE(TIFLASH[t2]) */ MAX(t2.embedding) FROM t2) AS max_in_t2 FROM t1;
embedding	max_in_t2
[1,2,3]	[7,8,9]
[4,5,6]	[7,8,9]

-- Test SubQuery type: using sub-query as derived table
SELECT embedding FROM (SELECT /*+ READ_FROM_STORAGE(TIKV[t1]) */ embedding FROM t1 ORDER BY embedding LIMIT 1) derived_table;
embedding
[1,2,3]
SELECT embedding FROM (SELECT /*+ READ_FROM_STORAGE(TIFLASH[t1]) */ embedding FROM t1 ORDER BY embedding LIMIT 1) derived_table;
embedding
[1,2,3]

-- Test SubQuery type: using sub-query in the existential test
SELECT /*+ READ_FROM_STORAGE(TIKV[t1]) */ t1.embedding FROM t1 WHERE EXISTS(SELECT /*+ READ_FROM_STORAGE(TIKV[t2]) */ 1 FROM t2 WHERE t1.embedding = t2.embedding);
embedding
[4,5,6]
SELECT /*+ READ_FROM_STORAGE(TIFLASH[t1]) */ t1.embedding FROM t1 WHERE EXISTS(SELECT /*+ READ_FROM_STORAGE(TIFLASH[t2]) */ 1 FROM t2 WHERE t1.embedding = t2.embedding);
embedding
[4,5,6]

SELECT /*+ READ_FROM_STORAGE(TIKV[t1]) */ t1.embedding FROM t1 WHERE t1.embedding NOT IN (SELECT /*+ READ_FROM_STORAGE(TIKV[t2]) */ t2.embedding FROM t2);
embedding
[1,2,3]
SELECT /*+ READ_FROM_STORAGE(TIFLASH[t1]) */ t1.embedding FROM t1 WHERE t1.embedding NOT IN (SELECT /*+ READ_FROM_STORAGE(TIFLASH[t2]) */ t2.embedding FROM t2);
embedding
[1,2,3]

SELECT /*+ READ_FROM_STORAGE(TIKV[t1]) */ t1.embedding FROM t1 WHERE t1.embedding IN (SELECT /*+ READ_FROM_STORAGE(TIKV[t2]) */ t2.embedding FROM t2);
embedding
[4,5,6]
SELECT /*+ READ_FROM_STORAGE(TIFLASH[t1]) */ t1.embedding FROM t1 WHERE t1.embedding IN (SELECT /*+ READ_FROM_STORAGE(TIFLASH[t2]) */ t2.embedding FROM t2);
embedding
[4,5,6]

-- Test SubQuery type: using sub-query in the quantified comparison
SELECT /*+ READ_FROM_STORAGE(TIKV[t1]) */ t1.embedding FROM t1 WHERE t1.embedding = ANY(SELECT /*+ READ_FROM_STORAGE(TIKV[t2]) */ t2.embedding FROM t2);
embedding
[4,5,6]
SELECT /*+ READ_FROM_STORAGE(TIFLASH[t1]) */ t1.embedding FROM t1 WHERE t1.embedding = ANY(SELECT /*+ READ_FROM_STORAGE(TIFLASH[t2]) */ t2.embedding FROM t2);
embedding
[4,5,6]

-- Test SubQuery type: using sub-query as operands of operators
SELECT /*+ READ_FROM_STORAGE(TIKV[t2]) */ t2.embedding FROM t2 WHERE t2.embedding > (SELECT /*+ READ_FROM_STORAGE(TIKV[t1]) */ MAX(t1.embedding) FROM t1);
embedding
[7,8,9]
SELECT /*+ READ_FROM_STORAGE(TIFLASH[t2]) */ t2.embedding FROM t2 WHERE t2.embedding > (SELECT /*+ READ_FROM_STORAGE(TIFLASH[t1]) */ MAX(t1.embedding) FROM t1);
embedding
[7,8,9]


-- Test clause: UNION / EXCEPT / INTERSECT

SELECT t1.embedding FROM t1 UNION SELECT t2.embedding FROM t2;
embedding
[1,2,3]
[4,5,6]
[7,8,9]
SELECT t1.embedding FROM t1 UNION ALL SELECT t2.embedding FROM t2;
embedding
[1,2,3]
[4,5,6]
[4,5,6]
[7,8,9]
SELECT t1.embedding FROM t1 EXCEPT SELECT t2.embedding FROM t2;
embedding
[1,2,3]
SELECT t1.embedding FROM t1 INTERSECT SELECT t2.embedding FROM t2;
embedding
[4,5,6]

-- Test clause: JOIN

SELECT /*+ READ_FROM_STORAGE(TIKV[t1], TIKV[t2]) */ t1.embedding, t2.embedding FROM t1 JOIN t2 ON t1.embedding = t2.embedding;
embedding	embedding
[4,5,6]	[4,5,6]
EXPLAIN FORMAT='brief' SELECT /*+ READ_FROM_STORAGE(TIKV[t1], TIKV[t2]) */ t1.embedding, t2.embedding FROM t1 JOIN t2 ON t1.embedding = t2.embedding;
id	estRows	task	access object	operator info
HashJoin	4.00	root	NULL	inner join, equal:[eq(vector__multiple_table_queries.t1.embedding, vector__multiple_table_queries.t2.embedding)]
├─TableReader(Build)	4.00	root	NULL	data:TableFullScan
│ └─TableFullScan	4.00	cop[tikv]	table:t2	keep order:false
└─TableReader(Probe)	4.00	root	NULL	data:TableFullScan
  └─TableFullScan	4.00	cop[tikv]	table:t1	keep order:false

SELECT /*+ READ_FROM_STORAGE(TIFLASH[t1], TIKV[t2]) */ t1.embedding, t2.embedding FROM t1 JOIN t2 ON t1.embedding = t2.embedding;
embedding	embedding
[4,5,6]	[4,5,6]
EXPLAIN FORMAT='brief' SELECT /*+ READ_FROM_STORAGE(TIFLASH[t1], TIKV[t2]) */ t1.embedding, t2.embedding FROM t1 JOIN t2 ON t1.embedding = t2.embedding;
id	estRows	task	access object	operator info
HashJoin	4.00	root	NULL	inner join, equal:[eq(vector__multiple_table_queries.t1.embedding, vector__multiple_table_queries.t2.embedding)]
├─TableReader(Build)	4.00	root	NULL	data:TableFullScan
│ └─TableFullScan	4.00	cop[tikv]	table:t2	keep order:false
└─TableReader(Probe)	4.00	root	NULL	data:TableFullScan
  └─TableFullScan	4.00	cop[tiflash]	table:t1	keep order:false

SELECT /*+ READ_FROM_STORAGE(TIFLASH[t1], TIFLASH[t2]) */ t1.embedding, t2.embedding FROM t1 JOIN t2 ON t1.embedding = t2.embedding;
embedding	embedding
[4,5,6]	[4,5,6]
EXPLAIN FORMAT='brief' SELECT /*+ READ_FROM_STORAGE(TIFLASH[t1], TIFLASH[t2]) */ t1.embedding, t2.embedding FROM t1 JOIN t2 ON t1.embedding = t2.embedding;
id	estRows	task	access object	operator info
TableReader	4.00	root	NULL	MppVersion:<num>, data:ExchangeSender
└─ExchangeSender	4.00	mpp[tiflash]	NULL	ExchangeType: PassThrough
  └─HashJoin	4.00	mpp[tiflash]	NULL	inner join, equal:[eq(vector__multiple_table_queries.t1.embedding, vector__multiple_table_queries.t2.embedding)]
    ├─ExchangeReceiver(Build)	4.00	mpp[tiflash]	NULL	NULL
    │ └─ExchangeSender	4.00	mpp[tiflash]	NULL	ExchangeType: Broadcast, Compression: FAST
    │   └─TableFullScan	4.00	mpp[tiflash]	table:t1	keep order:false
    └─TableFullScan(Probe)	4.00	mpp[tiflash]	table:t2	keep order:false

-- Test feature: CTE

WITH t1 AS (SELECT /*+ READ_FROM_STORAGE(TIKV[t1]) */ * FROM t1), t2 AS (SELECT /*+ READ_FROM_STORAGE(TIKV[t2]) */ * FROM t2) SELECT * FROM t1 JOIN t2 ON t1.embedding = t2.embedding;
id	embedding	id	embedding
2	[4,5,6]	3	[4,5,6]
WITH t1 AS (SELECT /*+ READ_FROM_STORAGE(TIKV[t1]) */ * FROM t1), t2 AS (SELECT /*+ READ_FROM_STORAGE(TIFLASH[t2]) */ * FROM t2) SELECT * FROM t1 JOIN t2 ON t1.embedding = t2.embedding;
id	embedding	id	embedding
2	[4,5,6]	3	[4,5,6]
WITH t1 AS (SELECT /*+ READ_FROM_STORAGE(TIFLASH[t1]) */ * FROM t1), t2 AS (SELECT /*+ READ_FROM_STORAGE(TIFLASH[t2]) */ * FROM t2) SELECT * FROM t1 JOIN t2 ON t1.embedding = t2.embedding;
id	embedding	id	embedding
2	[4,5,6]	3	[4,5,6]
